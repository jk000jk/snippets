
// 1

# include <stdio.h>
# include <stdlib.h>


int **mat(int n) {
     int ** a, i, j;
	 a = (int **) malloc(n * sizeof(int*));
	 for (i = 0; i < n; i++){
		  a[i] = (int *) malloc(n * sizeof(int));
	 }
	 for (i = 0; i < n; i++){
	   for (j = 0; j < n; j++) {
		   a[i][j] = i < j ? i : j;
	   }
	 }
	 return a;
}

int main()
{
  int i, j, n, **a;
  printf("n = ");
  scanf("%d", &n);
  
  a = mat(n);
  for (i = 0; i < n; i++) {
	  for(j = 0; j < n; j++) {
	    printf("%d ", a[i][j]);
	  }
	  printf("\n");
  }
  
  for (i = 0; i < n; i++)
	  free(a[i]);
  free(a);
  
  return 0;	
}


// 2

# include <stdio.h>
# include <stdlib.h>
# include <string.h>


int main()
{
   FILE *fin, *fout;
   int n, c = 0;
   char linie[1001], *p;	   
	
   fin = fopen("cuvinte.in", "r");
   fout = fopen("cuvinte.out", "w");
	
   fscanf(fin, "%d", &n);
   fgetc(fin);	

   while(fgets(linie, 1001, fin) != NULL) {
	  p = strtok(linie, " .,;:!?\n");
	  while(p != NULL) {
		  if (strlen(p) == n) {
		   fprintf(fout, "%s\n", p);
		   c++;
		  }
		  p = strtok(NULL, " .,;:!?\n");
	  }
   }
   
    if (c == 0) 
		fprintf(fout, "%s", "Imposibil");
	
	fclose(fin);
	fclose(fout);
	
	return 0;
}

// 3

# include <stdio.h>
# include <stdlib.h>
# include <string.h>

typedef struct {
	char nume[50];
	int note[20];
	int nr_note;
	float media;
	int grupa;
	
}Student; 

void calculmedia(Student t[], int n) {
	int i, j;
	for (i = 0; i < n; i++) {
		 t[i].media = 0;
		 for (j = 0; j < t[i].nr_note; j++)
		 {
			 t[i].media += t[i].note[j];
		 }
		 t[i].media /= t[i].nr_note;
	}
}

int cmpStudenti(const void *a, const void *b) {
	Student va = *(Student *) a;
	Student vb = *(Student *) b;
	
	if (va.media > vb.media) return -1;
	if (va.media < vb.media) return 1;
	return strcmp(va.nume, vb.nume);
}

qsort(t, n, sizeof(Student), cmpStudenti);


void grupa(Student t[], int n, int g) {
	FILE *f;
	int i; 
	char nfis[20];
	sprintf(nfis, "grupa_%d.bin", g);
	f = fopen(nfis, "wb");
	
	for (i = 0; i < n; i++) {
		 if(t[i].grupa == g)
			 fwrite(&t[i], sizeof(Student), 1, f);
	}	
	fclose(f);
}

int main()
{
	
	
	
}

