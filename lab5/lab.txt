package javaapplication4;

import java.io.*;
import java.util.HashMap;

public class Main {

    public static void main(String[] args) {
        HashMap<Character, Integer> hmap = new HashMap<Character, Integer>();
        File file = new File("C:/Users/User7/Desktop/NewFolder/file.txt");
        char[] chars = new char[(int) file.length()];
        try {
           FileReader reader = new FileReader(file);
           reader.read(chars);
           reader.close();
        } catch (IOException e) {
           System.out.println(e.getMessage());
        }

     
        for (int i = 0; i < chars.length; i++) {
            if (hmap.containsKey(chars[i])) {
                 hmap.put(chars[i], hmap.get(chars[i]) + 1);
            } else {
                 hmap.put(chars[i], 1);
            }
        }

        for (Character key : hmap.keySet()) {
            System.out.println(key + ": "
                    + hmap.get(key)/(float)chars.length * 100 + "%");
       }
       double entropy = entropyc(hmap, chars.length);
       double redundancy = Log2(256) - entropy;
       double efficiency = entropy / Log2(256);
       System.out.println("Entropy: " + entropy);
       System.out.println("Redundancy: " + redundancy);
       System.out.println("Efficiency: " + efficiency);

       double prob = 0.0;
       for (Character key : hmap.keySet()) {
            prob += hmap.get(key)/(float)chars.length;
       }

       System.out.println();
       System.out.println(prob);

       System.out.println("---------------------------");
       System.out.println();
       
        HashMap<Byte, Integer> hmap2 = new HashMap<Byte, Integer>();
        File filebin = new File("C:/Users/User7/Desktop/NewFolder/flower.bmp");
        byte[] binData = new byte [(int)filebin.length()];
        try {
           FileInputStream reader = new FileInputStream(filebin);
           reader.read(binData);
           reader.close();
        } catch (IOException e) {
           System.out.println(e.getMessage());
        }

       
        for (int i = 0; i < binData.length; i++) {
            if (hmap2.containsKey(binData[i])) {
                 hmap2.put(binData[i], hmap2.get(binData[i]) + 1);
            } else {
                 hmap2.put(binData[i], 1);
            }
        }


        for (Byte key : hmap2.keySet()) {
            System.out.println(key + ": "
                    + hmap2.get(key)/(float)binData.length * 100 + "%");
        }

         double entropybin = entropy(hmap2, binData.length);
         double redundancybin = Log2(2) - entropybin;
         double efficiencybin = entropybin / Log2(2);
         System.out.println("Entropy: " + entropybin);
         System.out.println("Redundancy: " + redundancybin);
         System.out.println("Efficiency: " + efficiencybin);
         System.out.println();

         double probbin = 0.0;
         for (Byte key : hmap2.keySet()) {
            probbin += hmap2.get(key)/(float)binData.length;
        }
        System.out.println(probbin);
    }

    private static double entropy(HashMap<Byte, Integer> hmap, int length) {
        double entropy = 0;
        for (Byte key : hmap.keySet()) {
             double prob = (double) hmap.get(key)/length;
             entropy -= prob * Log2(prob);
        }
        return entropy;
    }

     private static double entropyc(HashMap<Character, Integer> hmap, int length) {
        double entropy = 0;
        for (Character key : hmap.keySet()) {
             double prob = (double) hmap.get(key)/length;
             entropy -= prob * Log2(prob);
        }
        return entropy;
    }

    private static double Log2(double n) {
           return Math.log(n) / Math.log(2);
    }

}




// 1

package Tables;

import java.util.Arrays;

public class ExTables {

    public static void main(String[] args) {
        int[] v = {7, -5, 4, 9, 8, 10};

        System.out.println(Arrays.toString(v));

        Arrays.sort(v);
        System.out.println(Arrays.toString(v));

        int[] w = Arrays.copyOf(v, v.length);
        System.out.println(Arrays.toString(w));

        w[0] = 1;
        System.out.println(Arrays.toString(v));
    }
}


// 2

package Tables;

import java.util.Scanner;
import java.util.Arrays;

public class ExTables2 {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        System.out.print("n = ");
        int n = s.nextInt();
        int[][] v2 = new int[n][];

        for (int i = 0; i < n; i++) {
            v2[i] = new int[i+1];

            for (int j = 0; j < i+1; j++) {
                v2[i][j] = j+1;
            }
        }

        for (int i = 0; i < v2.length; i++) {
            System.out.println(Arrays.toString(v2[i]));
        }

    }
}


// 3


package Source;


public class Employe {
    private String name;
    private int age;
    private static String company = "BestIT";
    private double paycheck;
    private static int interns;

    public Employe(String name, int age, double paycheck) {
        this.name = name;
        this.age = age;
        this.paycheck = paycheck;

        if (this.age <= 25) {
            interns++;
        }
    }

    public Employe() {
        this("####", 18, 1900.00);
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public static String getCompany() {
        return company;
    }

    public static void setCompany(String company) {
        Employe.company = company;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getPaycheck() {
        return paycheck;
    }

    public void setPaycheck(double paycheck) {
        this.paycheck = paycheck;
    }
    
    public String toString() {
        return name + " " + age + " " + paycheck;
    }

    public static int getInterns() {
        return interns;
    }
}




package Source;

import java.util.Scanner;
import java.util.Arrays;

public class Ins {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        System.out.print("n = ");
        int n = s.nextInt();

        Employe v[] = new Employe[n];
        String name;
        int age;
        double paycheck;

        for (int i = 0; i < v.length; i++) {
            System.out.print("Name = ");
            name = s.next();

            System.out.print("Age = ");
            age = s.nextInt();

            System.out.print("Paycheck = ");
            paycheck = s.nextDouble();

            v[i] = new Employe(name, age, paycheck);
        }

        System.out.println(Arrays.toString(v));
        System.out.println(Employe.getInterns());
    }
}

