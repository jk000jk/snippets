
package javaapplication9;

import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        StudentUTM[] tob = new StudentUTM[5];

        tob[0] = new StudentUTM("E", "E", 7);
        tob[1] = new StudentUTM("D", "D", 1);
        tob[2] = new StudentUTM("B", "B", 5);
        tob[3] = new StudentUTM("A", "A", 2);
        tob[4] = new StudentUTM("C", "C", 3);
     

        // Name Sort
        Arrays.sort(tob, new SortName());

        for (StudentUTM s : tob) {
            System.out.println(s);
        }

        System.out.println();
        Arrays.sort(tob, new SortYear());

        for (StudentUTM s : tob) {
            System.out.println(s);
        }
    }

}



package javaapplication9;

public class StudentUTM {
    private String name, fname;
    private int year;
    private static String univ = "UTM";

    public StudentUTM() {
        this("###", "####", 0);
    }

    public StudentUTM(String name, String fname, int year) {
        this.name = name;
        this.fname = fname;
        this.year = year;
    }

    public String getFname() {
        return fname;
    }

    public void setFname(String fname) {
        this.fname = fname;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public static String getUniv() {
        return univ;
    }

    public static void setUniv(String univ) {
        StudentUTM.univ = univ;
    }

    public int getYear() {
        return year;
    }

    public void setYear(int year) {
        this.year = year;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final StudentUTM other = (StudentUTM) obj;
        if ((this.name == null) ? (other.name != null) : !this.name.equals(other.name)) {
            return false;
        }
        if ((this.fname == null) ? (other.fname != null) : !this.fname.equals(other.fname)) {
            return false;
        }
        if (this.year != other.year) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 37 * hash + (this.name != null ? this.name.hashCode() : 0);
        hash = 37 * hash + (this.fname != null ? this.fname.hashCode() : 0);
        hash = 37 * hash + this.year;
        return hash;
    }

    @Override
    public String toString() {
        return name + " " + fname + " " + year;
    }
}


package javaapplication9;

import java.util.Comparator;

public class SortName implements Comparator {

    public int compare(Object o1, Object o2) {

        StudentUTM a = (StudentUTM) o1;
        StudentUTM b = (StudentUTM) o2;
        if (a.getName().compareTo(b.getName()) == 0) {
           return a.getFname().compareTo(b.getFname());
        }
        return a.getName().compareTo(b.getName());
    }


}


package javaapplication9;

import java.util.Comparator;

public class SortYear implements Comparator{

     @Override
     public int compare(Object o1, Object o2) {

        StudentUTM a = (StudentUTM) o1;
        StudentUTM b = (StudentUTM) o2;
        if (a.getYear() < b.getYear()) {
           return -1;
        } else if (a.getYear() == b.getYear()) {
           return 0;
        }
        return 1;
    }
}



package javaapplication9;

import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        Calc c = new Calc(2, 3);
        
        System.out.println(c.calc(new Addition(2, 3)));
    }

}



package javaapplication9;


public class Calc {
    public int a, b;

    public int calc(OpM o) {
        return o.op(a, b);
    }

    public Calc(int a, int b) {
        this.a = a;
        this.b = b;
    }

    public Calc() {
        this(0, 0);
    }

    public int getA() {
        return a;
    }

    public void setA(int a) {
        this.a = a;
    }

    public int getB() {
        return b;
    }

    public void setB(int b) {
        this.b = b;
    }

    public String toString() {
        return a + " " + b;
    }
}


package javaapplication9;


public class Addition implements OpM {
   public int op(int a, int b) {
        return a + b;
    }
}



package javaapplication9;


public class Multiply implements OpM{
   public int op(int a, int b) {
        return a * b;
    }
}


package javaapplication9;

public interface OpM {
        int op(int a, int b);
}




















// html

<html>
<head>
	<title></title>
<script>
t=new Array("ian","feb","mar","apr","mai","iun","iul","aug","sep","oct","nov","dec");
function test(y)
{
for(i=0;i<12;i++)
	if(y[i].selected)
		l=t[i];


mesaj="luna este: "+l;

    if (document.getElementById("al").checked) {
		alert(mesaj);
	}else if (document.getElementById("mw").checked) {
		document.write(mesaj);
	} else {
	   document.getElementById("mesaj").innerHTML = mesaj;
	}
}	

 
</script>

<style>
label {
	font-size: 22px;
	color: green;
}
</style>
</head>
<body>
<form name="f">

<label>alert</label>
<input type="radio" name="menu" value="2" id="al" checked="checked">
<br/>

<label>document.getElementById</label>
<input type="radio" name="menu" value="1" id="mi" checked="checked">
<br/>
<label>document.write</label>
<input type="radio" name="menu" value="0" id="mw"/>

<br/>
<br/>

<script>
document.write("<select name='luna'>");
for(i=1;i<=12;i++)
{k=i-1;
	document.write("<option value='"+i+"'>"+t[k]+"</option>");
}
document.write("</select>");
</script>




<input type="button" name="b1" value="verifica lista simpla" onclick="test(luna)"> <br>
<input type="reset" name="b2">
</form>
<div id="mesaj"></div>
</body>
</html>



<html>
<head>
<title>Obiecte</title>
</head>

<script>
function deschide_fereastra() 
{
	fer=window.open("ex1.html","_blank","top=400,left=600,width=200, height=200,menubar=yes,toolbar=yes,scrollbars=yes,resizable=no")
	
}

function window_fory() {
	for(i=0;i<340;i++) {
		fer.moveTo(50,i*2);
		fer.focus();
	}
}
function window_forx() {
	for(i=0;i<470;i++) {
		fer.moveTo(i*2,50);
		fer.focus();
	}
}
function window_forx_y() {
	for(i=0;i<340;i++) {
		fer.moveTo(i*2,i*2);
		fer.focus();
	}
}

function window_fory2() {
	for(i=340;i>=50;i--) {
		fer.moveTo(50,i*2);
		fer.focus();
	}
}
function window_forx2() {
	for(i=470;i>=50;i--) {
		fer.moveTo(i*2,50);
		fer.focus();
	}
}
function window_forx_y2() {
	for(i=340;i>=50;i--) {
		fer.moveTo(i*2,i*2);
		fer.focus();
	}
}

</script>
<input type="button" value="deschide o fereastra noua" onClick="deschide_fereastra();"><br><br>
<input type="button" value="inchide fereastra deschisa" onClick="fer.close();"><br><br>

<input type="button" value="moveTo_y" onClick="window_fory();">
<input type="button" value="moveTo_x" onClick="window_forx();">
<input type="button" value="moveTo_xy" onClick="window_forx_y();">
<br/><br/>
<input type="button" value="moveTo_y2" onClick="window_fory2();">
<input type="button" value="moveTo_x2" onClick="window_forx2();">
<input type="button" value="moveTo_xy2" onClick="window_forx_y2();">

</body>
</html>
