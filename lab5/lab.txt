// 1

#include <stdio.h>
#include <stdlib.h>

int main(){
	
	int n, *v, *vpoz, *vneg, nrpoz = 0, nrneg = 0, i;
	
	printf("n = ");
	scanf("%d", &n);
	
	v = (int*) malloc(n * sizeof(int));
	for (i = 0; i < n; i++) {
		printf("v[%d] = ", i);
		scanf("%d", &v[i]);
		if(v[i] > 0) nrpoz++;
		else if(v[i] < 0) nrneg++;
	}
	
	vpoz = (int*) malloc(nrpoz * sizeof(int));
	vneg = (int*) malloc(nrneg * sizeof(int));
	
	nrpoz = nrneg = 0;
	for (i = 0; i < n; i++) {
		if(v[i] > 0) vpoz[nrpoz++] = v[i];
		else if(v[i] < 0) vneg[nrneg++] = v[i];
	}
	
	for (i = 0; i < nrpoz; i++) {
		printf("vpoz[%d] = %d \n", i, vpoz[i]);
	}
	
	for (i = 0; i < nrneg; i++) {
		printf("vneg[%d] = %d \n", i, vneg[i]);
	}
	
	free(v);
	free(vneg);
	free(vpoz);
	
	return 0;
}


// 2

#include <stdio.h>
#include <stdlib.h>

int main(){
	
	int n, *v, *vmaxindexes,  i, max, k;
	
	printf("n = ");
	scanf("%d", &n);
	
	v = (int *) malloc(n * sizeof(int)); 	
	for (i = 0; i < n; i++){
		printf("v[%d] = ", i);
		scanf("%d", &v[i]);
	}	
	
	max = v[0];
	k = 1;
	for (i = 0; i < n; i++){
		if(v[i] > max) {
			max = v[i];
		}else if(v[i] == max)
			k++;
	}
	
	vmaxindexes = (int *) malloc(k * sizeof(int)); 
	k = 0;
	for (i = 0; i < n; i++){
		if(v[i] == max) {
			vmaxindexes[k++] = i;
		} 
	}
	
	for (i = 0; i < k; i++) {
		printf("vmaxindexes[%d] = %d \n", i, vmaxindexes[i]);
	}
	
	free(v);
	free(vmaxindexes);
	
	return 0;
}

// 3
#include <stdio.h>
#include <stdlib.h>

int main(){
	
	int n, i, j;
	int** v;
	
	printf("n = ");
	scanf("%d", &n);
	
	v = (int **) malloc(n * sizeof(int)); 	
	for (i = 0; i < n; i++){
		v[i] = (int *) malloc((i + 1) * sizeof(int)); 
		for (j = 0; j < i + 1; j++){ 
		   v[i][j] = j + 1;
		}
	}	
	
	for (i = 0; i < n; i++){ 
		for (j = 0; j < i + 1; j++){ 
			printf("v[%d][%d] = %d \n", i, j, v[i][j]);
		}		
	}
	 
	
	free(v);
	
	return 0;
}
